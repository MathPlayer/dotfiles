#
# ~/.gitconfig
#

[user]
  name = "Bogdan Popescu"
  email = "bogdan.popescu0905@gmail.com"
[core]
  excludesfile = "~/.gitignore_global"
  autocrlf = false
  eol = lf
[commit]
  gpgsign = true
  tagsign = true
[gpg]
  format = ssh
[color]
  ui = true
  whitespace = red reverse
[color.status]
  updated = brightyellow
  changed = brightred
  untracked = brightmagenta
  unmerged = red
[pull]
  rebase = true
[push]
  default=simple
[rebase]
  autoSquash = True
  abbreviateCommands = True
[diff]
  mnemonicPrefix = True
  algorithm = minimal
  wsErrorHighlight = all
  colormoved = plain
[init]
  defaultBranch = main
[alias]
  st = status
  sh = show --show-signature
  shs = show --stat --show-signature

  a = add
  ap = add --patch
  rm = remove
  r = reset
  rh = reset --hard
  rs = restore
  rsp = restore --patch
  rss = restore --staged
  rssp = restore --staged --patch

  d = diff
  dn = diff --no-index
  dw = diff -w
  dww = diff --word-diff --color-words
  ds = diff --staged
  dsw = diff --staged -w
  dsww = diff --staged --word-diff --color-words

  co = checkout
  cb = checkout -b
  # Whoever decided to change "master" to "main" was a badass. TODO: what if more than one exists?
  cm = "! git checkout $(git show-ref --heads | grep -E '/(main|master)$' | sed 's#.*refs/heads/##')"

  c = commit --verbose
  ca = commit --verbose --amend
  can = commit --amend --no-edit
  canr = commit --amend --no-edit --reset-author
  cf = commit --fixup

  b = branch
  bd = branch --delete
  bdf = branch --delete --force
  bmv = branch --move
  br = branch --remotes
  bv = branch -vv
  sw = switch
  bsup = "! git branch --set-upstream-to=origin/$(git branch --show-current)"
  bunsup = "! git branch --unset-upstream"

  l = pull
  up = pull --rebase --recurse-submodules
  p = push
  pf = push --force-with-lease
  pff = push --force
  psu = push --set-upstream
  psup = "! git push --set-upstream origin $(git branch --show-current)"

  ma = merge --abort

  rb = rebase
  rbc = rebase --continue
  rbs = rebase --skip
  rba = rebase --abort
  rbi = rebase --interactive

  cp = cherry-pick
  cpc = cherry-pick --continue
  cps = cherry-pick --skip
  cpa = cherry-pick --abort

  logs = log --show-signature

  lg = log --date=short --pretty=format:'%C(yellow)%h%Creset - %C(green)(%ad)%Creset | %Cred%d%Creset %s %C(bold blue)[%an]'
  lg5 = log -n 5 --date=short --pretty=format:'%C(yellow)%h%Creset - %C(green)(%ad)%Creset | %C(blue)%s%Creset %C(bold magenta)[%an]%Creset %C(bold red)%d%Creset'
  lg10 = log -n 10 --date=short --pretty=format:'%C(yellow)%h%Creset - %C(green)(%ad)%Creset | %C(blue)%s%Creset %C(bold magenta)[%an]%Creset %C(bold red)%d%Creset'
  lgg = log --graph --decorate --all --date=short --pretty=format:'%C(yellow)%h%Creset - %C(green)(%ad)%Creset | %Cred%d%Creset %s %C(bold blue)[%an]'

  cl = clone --recurse-submodules
  fa = fetch --prune --all --tags --recurse-submodules --force
  rv = remote --verbose
  ra = remote add
  rmv = remote rename

  sta = stash push
  staa = stash apply
  stp = stash pop
  std = stash drop
  stl = stash list
  sts = stash show
  stsp = stash show --patch

  v = "! git --version"
  alias = "! git config --get-regexp 'alias.*' | grep -v '^alias.alias' | sed -e 's#^alias\\.##' -e 's# # = #' | sort"
  wip="! git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m '--wip-- [skip ci]'"
  unwip="! git log -n 1 | grep -q -c -- '--wip--' && git reset HEAD~1"

# Random app configs.
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[includeIf "gitdir:~/work/"]
  path = ~/work/.gitconfig
[includeIf "gitdir:~/personal/"]
  path = ~/personal/.gitconfig

# Delta
[core]
  pager = delta
[interactive]
  diffFilter = delta --color-only
[delta]
  navigate = true    # use n and N to move between diff sections
  light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
  side-by-side = true
  line-numbers = true
